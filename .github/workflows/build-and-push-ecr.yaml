name: Build and Push Docker Image with Slack Notification

on:
  workflow_run:
    workflows: ["Build and Push Docker Image"]
    types:
      - completed

jobs:
  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1
      ECR_REGISTRY_URL: 676933797202.dkr.ecr.us-east-1.amazonaws.com
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to AWS ECR
        id: login-ecr
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY_URL/docker-project
      
      - name: Build Docker image
        run: docker build -t new-app .

      - name: Tag Docker image
        run: docker tag new-app:latest $ECR_REGISTRY_URL/docker-project:0.0.2

      - name: Push Docker image to ECR
        run: docker push $ECR_REGISTRY_URL/docker-project:0.0.2

  notify_slack:
    name: Notify Slack
    needs: [build_and_push]
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack notification
        if: always()
        uses: rtCamp/action-slack-notify@v2
        with:
          status: ${{ needs.build_and_push.result }}
          fields: job,event
          status_color: ${{ job.status }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: 'git'
          SLACK_USERNAME: 'GitHub Actions'
          SLACK_ICON_EMOJI: ':github:'
